services:
  webstudio:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      webstudio-postgres:
        condition: service_healthy
    environment:
      - SERVICE_URL_WEBSTUDIO_3000
      - DATABASE_URL=postgresql://$SERVICE_USER_POSTGRES:$SERVICE_PASSWORD_POSTGRES@webstudio-postgres:5432/${POSTGRES_DB:-webstudio}
      - DIRECT_URL=postgresql://$SERVICE_USER_POSTGRES:$SERVICE_PASSWORD_POSTGRES@webstudio-postgres:5432/${POSTGRES_DB:-webstudio}
      - AUTH_SECRET=$SERVICE_PASSWORD_64_AUTH
      - DEV_LOGIN=${DEV_LOGIN:-admin@webstudio.local}
      - DEPLOYMENT_ENVIRONMENT=production
      - DEPLOYMENT_URL=${SERVICE_URL_WEBSTUDIO}
      - PORT=3000
      - PRISMA_BINARY_TARGET=["native"]
      - NODE_ENV=production
      - FEATURES=""
      - USER_PLAN=""
    volumes:
      - webstudio-data:/app/data
      - webstudio-uploads:/app/uploads
    healthcheck:
      test:
        - CMD
        - wget
        - '--quiet'
        - '--spider'
        - 'http://localhost:3000'
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  webstudio-postgres:
    image: 'postgres:16-alpine'
    environment:
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - POSTGRES_DB=${POSTGRES_DB:-webstudio}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
    restart: unless-stopped

volumes:
  webstudio-data:
  webstudio-uploads:
  postgres-data:
